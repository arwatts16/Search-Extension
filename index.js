/* eslint-env es6 */

'use strict';

const fs = require('fs');
const path = require('path');
const resolver = require('opensphere-build-resolver/utils');


/**
 * Directory containing build artifacts generated by `bits-resolver`.
 * @type {string}
 */
const buildDir = '.build';


/**
 * Path to the build directory.
 * @type {string}
 */
const buildPath = path.join(__dirname, buildDir);


/**
 * Path to the built version file.
 * @type {string}
 */
const versionFile = path.join(buildPath, 'version');


/**
 * Relative path of the built version directory.
 * @type {string}
 */
const version = fs.readFileSync(versionFile, 'utf8').trim()
  .replace(/.*\//, '');


/**
 * Path to the package.json file.
 * @type {string}
 */
const packageFile = path.join(__dirname, 'package.json');


/**
 * Version value from the package.json file. Used in about/feedback/what's new
 * @type {string}
 */
const packageVersion = JSON.parse(fs.readFileSync(packageFile, 'utf8')).version;


/**
 * Resources for `bits-index` to include in `index.html`.
 * @type {Array<Object>}
 */
const resources = [
  {
    source: buildPath,
    target: '',
    scripts: ['modernizr.js']
  },
  {
    source: resolver.resolveModulePath('opensphere', __dirname),
    target: '',
    scripts: ['browserCheck.js']
  },
  {
    source: resolver.resolveModulePath('opensphere', __dirname),
    target: '',
    files: ['images']
  },
  {
    source: resolver.resolveModulePath('bits-internal', __dirname),
    target: '',
    files: ['images']
  },
  {
    source: resolver.resolveModulePath('jquery/dist', __dirname),
    target: 'vendor/jquery',
    scripts: ['jquery.min.js']
  },
  {
    source: resolver.resolveModulePath('opensphere/vendor/jquery', __dirname),
    target: 'vendor/jquery',
    scripts: ['jquery.event.drag-2.2.js', 'jquery.resize.js']
  },
  {
    source: resolver.resolveModulePath('opensphere/vendor/jquery-ui', __dirname),
    target: 'vendor/jquery-ui',
    css: ['darkness/jquery-ui-1.11.0.min.css'],
    scripts: ['jquery-ui-1.11.4.min.js'],
    files: ['darkness/images']
  },
  {
    source: resolver.resolveModulePath('opensphere/vendor/bootstrap', __dirname),
    target: 'vendor/bootstrap',
    css: ['slate/bootstrap.min.css'],
    scripts: ['bootstrap.min.js'],
    files: ['img']
  },
  {
    source: resolver.resolveModulePath('select2', __dirname),
    target: 'vendor/select2',
    css: ['select2.css'],
    scripts: ['select2.js'],
    files: ['*.+(gif|png)']
  },
  {
    source: resolver.resolveModulePath('opensphere/vendor/slick', __dirname),
    target: 'vendor/slickgrid',
    css: [
      'slick.grid.css'
    ],
    scripts: [
      'slick.core.js',
      'slick.dataview.js',
      'slick.formatters.js',
      'slick.rowselectionmodel.js',
      'slick.grid.js'
    ],
    files: ['images']
  },
  {
    source: resolver.resolveModulePath('simplemde/dist', __dirname),
    target: 'vendor/simplemde',
    css: ['simplemde.min.css'],
    scripts: ['simplemde.min.js']
  },
  {
    source: resolver.resolveModulePath('font-awesome', __dirname),
    target: 'vendor/font-awesome',
    css: ['css/font-awesome.min.css'],
    files: ['fonts']
  },
  {
    source: resolver.resolveModulePath('moment/min', __dirname),
    target: 'vendor/moment',
    scripts: ['moment.min.js']
  },
  {
    source: resolver.resolveModulePath('angular', __dirname),
    target: 'vendor/angular',
    scripts: ['angular.min.js']
  },
  {
    source: resolver.resolveModulePath('angular-animate', __dirname),
    target: 'vendor/angular',
    scripts: ['angular-animate.min.js']
  },
  {
    source: resolver.resolveModulePath('angular-route', __dirname),
    target: 'vendor/angular',
    scripts: ['angular-route.min.js']
  },
  {
    source: resolver.resolveModulePath('angular-sanitize', __dirname),
    target: 'vendor/angular',
    scripts: ['angular-sanitize.min.js']
  },
  {
    source: resolver.resolveModulePath('opensphere/vendor/angular-ui', __dirname),
    target: 'vendor/angular',
    scripts: [
      'angular-ui.js',
      'angular-ui-utils/scroll/ui-scroll.js',
      'angular-ui-utils/scroll/ui-scroll-jqlite.js'
    ]
  },
  {
    source: resolver.resolveModulePath('opensphere/vendor/polyfill', __dirname),
    target: 'vendor/polyfill',
    scripts: ['blob.js', 'filesaver.js', 'typedarray.js']
  },
  {
    source: resolver.resolveModulePath('zip-js/WebContent', __dirname),
    target: 'vendor/zip-js',
    scripts: ['zip.js', 'zip-ext.js'],
    files: ['deflate.js', 'inflate.js', 'z-worker.js']
  },
  {
    source: resolver.resolveModulePath('linq', __dirname),
    target: 'vendor/linq',
    scripts: ['linq.min.js']
  },
  {
    source: resolver.resolveModulePath('croppie', __dirname),
    target: 'vendor/croppie',
    css: ['croppie.css'],
    scripts: ['croppie.min.js']
  },
  {
    source: resolver.resolveModulePath('strophe', __dirname),
    target: 'vendor/strophe',
    scripts: ['strophe.js']
  },
  {
    source: __dirname,
    target: '..',
    files: ['errors']
  }
];


/**
 * Resources for unsupported browser page to include in `old.html`
 * @type {Array<Object>}
 */
const oldResources = [
  {
    source: __dirname,
    target: '',
    scripts: ['classbanner.js'],
    css: ['classbanner.css']
  },
  {
    source: resolver.resolveModulePath('opensphere', __dirname),
    target: '',
    scripts: ['browserCheck.js']
  },
  {
    source: buildPath,
    target: '',
    scripts: ['modernizr.js']
  },
  {
    source: resolver.resolveModulePath('platform', __dirname),
    target: '',
    scripts: ['platform.js']
  },
  {
    source: resolver.resolveModulePath('font-awesome', __dirname),
    target: 'vendor/font-awesome',
    css: ['css/font-awesome.min.css'],
    files: ['fonts']
  },
  {
    source: resolver.resolveModulePath('opensphere/vendor/bootstrap', __dirname),
    target: 'vendor/bootstrap',
    css: ['slate/bootstrap.min.css']
  }
];


/**
 * Resources for unsupported browser page to include in `old.html`
 * @type {Array<Object>}
 */
const browserResources = [
  {
    source: path.join(__dirname, 'browser'),
    target: 'browser',
    scripts: ['browser.js']
  },
  {
    source: resolver.resolveModulePath('font-awesome', __dirname),
    target: 'vendor/font-awesome',
    css: ['css/font-awesome.min.css'],
    files: ['fonts']
  },
  {
    source: resolver.resolveModulePath('opensphere/vendor/bootstrap', __dirname),
    target: 'vendor/bootstrap',
    css: ['slate/bootstrap.min.css']
  }
];


/**
 * Exports
 * @type {Object}
 */
module.exports = {
  appVersion: version,
  packageVersion: packageVersion,
  basePath: __dirname,
  distPath: path.join('dist', 'Search-Extension'),
  templates: [
    {
      id: 'browser',
      file: 'browser-template.html',
      resources: browserResources
    }, {
      id: 'index',
      file: 'index-template.html',
      resources: resources
    }, {
      id: 'old',
      file: path.relative(__dirname, resolver.resolveModulePath('opensphere/old-template.html')),
      resources: oldResources
    }
  ],
  debugCss: path.join(buildDir, 'combined.css'),
  compiledCss: path.join(version, 'styles', 'Search-Extension.min.css'),
  compiledJs: path.join(version, 'Search-Extension.min.js')
};
